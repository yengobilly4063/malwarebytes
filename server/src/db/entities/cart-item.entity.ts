import { Field, ID, ObjectType } from "type-graphql";
import { Column, Entity, PrimaryGeneratedColumn } from "typeorm";

@Entity({ name: "cart_items" })
@ObjectType({ description: "Cart item for each product in the cart" })
export class CartItem {
  @PrimaryGeneratedColumn("uuid")
  @Field(() => ID!, { nullable: true })
  id?: string;

  @Column({ type: "uuid", length: 36, name: "cart_id" })
  cartId?: string;

  @Column({ type: "uuid", length: 36, name: "product_id" })
  @Field(() => String, { nullable: true })
  productId?: string;

  @Field(() => String, { nullable: true })
  productName?: string;

  @Column("int")
  @Field(() => Number, { nullable: true })
  price?: number;

  @Column("int")
  @Field(() => Number, { nullable: true })
  quantity?: number;
}
