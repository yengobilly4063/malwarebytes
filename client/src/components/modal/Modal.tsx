import React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { closeModal } from "../../store/reducers/modal/modal.action-creators";
import { getModalState } from "../../store/reducers/modal/modal.reducer";
import styles from "./Modal.module.scss";

interface IProps {
  children?: React.FC | JSX.Element | Array<JSX.Element>;
}

const Modal: React.FC<IProps> = ({ children }) => {
  const dispatch = useDispatch();
  const { isOpen } = useSelector(getModalState);

  const handleCloseModal = () => {
    dispatch(closeModal());
  };

  return (
    <React.Fragment>
      {isOpen && (
        <div className={styles.wrapper}>
          <div className={styles.overlay} onClick={handleCloseModal}></div>
          <div className={styles.content}>
            <div className={styles.action}>
              <button className={styles.btnClose} onClick={handleCloseModal}>
                X
              </button>
            </div>
            {children}
          </div>
        </div>
      )}
    </React.Fragment>
  );
};

export default Modal;
