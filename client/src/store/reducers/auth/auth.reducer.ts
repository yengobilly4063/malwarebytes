import { IState, StoreStates } from "../../state.interfaces";
import { IAuthActionType, AuthActionConstants, IAuthUser } from "./auth.types";
import { getAuthUser, isLoggedIn, storeAuthUser } from "../../../common/local-storage";

const initialState: IAuthUser = { isAuth: isLoggedIn(), user: getAuthUser() };

const authReducer = (state: IState[StoreStates.AUTH] = initialState, action: IAuthActionType) => {
  switch (action.type) {
    case AuthActionConstants.LOGIN: {
      return {
        ...state,
        isAuth: true,
      };
    }

    case AuthActionConstants.GET_USER: {
      return {
        ...state,
        user: action.payload,
      };
    }

    case AuthActionConstants.LOGOUT: {
      localStorage.clear();
      return {
        ...state,
        user: null,
        isAuth: false,
      };
    }
    default:
      return state;
  }
};

export const getAuthUserState = (state: IState) => state[StoreStates.AUTH];

export default authReducer;
