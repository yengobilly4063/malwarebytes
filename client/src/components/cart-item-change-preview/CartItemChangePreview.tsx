import React, { useEffect, useState } from "react";
import { useDispatch } from "react-redux";
import { useHistory } from "react-router";
import { CartItemDiff } from "../../common/helpers/cart.helper";
import { cartDiff } from "../../common/local-storage/cart.local";
import { closeModal, openModal } from "../../store/reducers/modal/modal.action-creators";
import Modal from "../modal/Modal";
import styles from "./CartItemChangePreview.module.scss";

const getProductDiffMessage = (item: CartItemDiff) => {
  let diff = item?.currentQty! - item?.prevQty!;
  let message: string;

  if (diff < 0) {
    message = `${item.productName} decreased by ${Math.abs(diff)}`;
  } else {
    message = `${item.productName} increased by ${Math.abs(diff)}`;
  }
  return message;
};

const CartItemChangePreview: React.FC = () => {
  const dispatch = useDispatch();
  const history = useHistory();
  const [cartItems, setCartItems] = useState<Array<CartItemDiff>>([]);

  const handleCloseModal = () => {
    dispatch(closeModal());
    localStorage.setItem(cartDiff, JSON.stringify([]));
    history.push("/");
  };

  useEffect(() => {
    const cartItemDiff = JSON.parse(localStorage.getItem(cartDiff) as string) as Array<CartItemDiff>;
    if (cartItemDiff.length === 0) {
      dispatch(closeModal());
      history.push("/");
    }
    dispatch(openModal());
    setCartItems(cartItemDiff);
  }, [history]);

  return (
    <Modal>
      <div className={styles.wrapper}>
        <h1 className={styles.message}>Someone changed the data:</h1>
        {cartItems?.map((product) => (
          <div key={product.productId} className={styles.product}>
            {getProductDiffMessage(product)}
          </div>
        ))}
        <div className={styles.action}>
          <button className={styles.close} onClick={handleCloseModal}>
            Close
          </button>
        </div>
      </div>
    </Modal>
  );
};

export default CartItemChangePreview;
