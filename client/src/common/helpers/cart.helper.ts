import { Cart, CartItem } from "../../models/cart.model";

export const getCartItemsDiff = (dbState: Cart, localState: Cart) => {
  const { items: dbItems } = dbState;
  const { items: localItems } = localState;

  let newData: CartItemDiff;
  let result: Array<CartItemDiff> = [];

  localItems?.map((localItem: CartItem) => {
    const found = dbItems?.find((dbItem: CartItem) => dbItem.productId === localItem.productId);

    if (!found) {
      newData = {
        productId: localItem.productId,
        productName: localItem.productName,
        prevQty: 0,
        currentQty: localItem.quantity,
      };
      result.push(newData);
    }
    if (found && found.quantity !== localItem.quantity) {
      newData = {
        productId: localItem.productId,
        productName: localItem.productName,
        prevQty: found.quantity,
        currentQty: localItem.quantity,
      };
      result.push(newData);
    }
  });
  return result;
};

export interface CartItemDiff {
  productId?: string;
  productName?: string;
  prevQty?: number;
  currentQty?: number;
}
